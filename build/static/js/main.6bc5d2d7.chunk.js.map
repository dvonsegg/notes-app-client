{"version":3,"sources":["containers/Home.js","containers/NotFound.js","components/LoaderButton.js","containers/Login.js","components/AppliedRoute.js","containers/Signup.js","config.js","libs/awsLib.js","containers/NewNote.js","containers/Notes.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNoteClick","event","preventDefault","history","push","currentTarget","getAttribute","state","isLoading","notes","isAuthenticated","setState","alert","_context","t0","API","get","concat","map","note","i","react_default","a","createElement","lib","key","noteId","to","ListGroupItem","header","content","trim","split","Date","createdAt","toLocaleString","className","Link","PageHeader","ListGroup","renderNotesList","renderNotes","renderLander","Component","containers_NotFound","components_LoaderButton","_ref","text","loadingText","_ref$className","_ref$disabled","disabled","objectWithoutProperties","Button","assign","Glyphicon","glyph","Login","handleChange","defineProperty","target","id","value","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","prev","next","Auth","signIn","email","password","userHasAuthenticated","message","stop","_x","apply","arguments","length","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","validateForm","AppliedRoute","C","component","cProps","rest","Route","render","Signup","newUser","signUp","username","sent","handleConfirmationSubmit","_ref2","_callee2","_context2","confirmSignUp","confirmationCode","_x2","confirmPassword","HelpBlock","validateConfirmationForm","renderForm","renderConfirmationForm","config","MAX_ATTACHMENT_SIZE","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","s3Upload","_s3Upload","file","filename","stored","now","name","Storage","vault","put","contentType","abrupt","NewNote","handleFileChange","files","attachment","size","MAX_ATTACHEMENT_SIZE","createNote","t1","post","body","compontentClass","bsStyle","Notes","saveNote","handleDelete","window","confirm","isDeleting","deleteNote","attachementURL","getNote","_context3","match","params","str","replace","del","componentClass","Static","rel","href","formatFilename","onClick","AuthenticatedRoute","Redirect","location","pathname","search","UnauthenticatedRoute","redirect","url","undefined","results","RegExp","exec","decodeURIComponent","querystring","Routes","childProps","Switch","path","exact","NotFound","App","authenticated","handleLogout","signOut","isAuthenticating","currentSession","Navbar","fluid","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","react","withRouter","Boolean","hostname","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6bc5d2d7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport \"./Home.css\";\r\nimport { API } from \"aws-amplify\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      notes: []\r\n    };\r\n  } \r\n\r\n  async componentDidMount() {\r\n    if (!this.props.isAuthenticated) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const notes = await this.notes();\r\n      this.setState({ notes });\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  notes() {\r\n    return API.get(\"notes\", \"/notes\");\r\n  }\r\n\r\n  renderNotesList(notes) {\r\n    return [{}].concat(notes).map(\r\n      (note, i) =>\r\n        i !== 0\r\n          ? <LinkContainer\r\n              key={note.noteId}\r\n              to={`/notes/${note.noteId}`}\r\n            >\r\n              <ListGroupItem header={note.content.trim().split(\"\\n\")[0]}>\r\n                {\"Created: \" + new Date(note.createdAt).toLocaleString()}\r\n              </ListGroupItem>\r\n            </LinkContainer>\r\n          : <LinkContainer\r\n              key=\"new\"\r\n              to=\"/notes/new\"\r\n            >\r\n              <ListGroupItem>\r\n                <h4>\r\n                  <b>{\"\\uFF0B\"}</b> Create a new note\r\n                </h4>\r\n              </ListGroupItem>\r\n            </LinkContainer>\r\n    );\r\n  }\r\n\r\n  handleNoteClick = event => {\r\n    event.preventDefault();\r\n    this.props.history.push(event.currentTarget.getAttribute(\"href\"));\r\n  }\r\n\r\n  renderLander() {\r\n    return (\r\n          <div className=\"lander\">\r\n        <h1>Scratch</h1>\r\n        <p>A simple note taking app</p>\r\n        <div>\r\n          <Link to=\"/login\" className=\"btn btn-info btn-lg\">\r\n            Login\r\n          </Link>\r\n          <Link to=\"/signup\" className=\"btn btn-success btn-lg\">\r\n            Signup\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderNotes() {\r\n    return (\r\n      <div className=\"notes\">\r\n        <PageHeader>Your Notes</PageHeader>\r\n        <ListGroup>\r\n          {!this.state.isLoading && this.renderNotesList(this.state.notes)}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        {this.props.isAuthenticated ? this.renderNotes() : this.renderLander()}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default () =>\r\n  <div className=\"NotFound\">\r\n    <h3>Sorry, page not found!</h3>\r\n  </div>;","import React from \"react\";\r\nimport { Button, Glyphicon } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default ({\r\n    isLoading,\r\n    text,\r\n    loadingText,\r\n    className = \"\",\r\n    disabled = false,\r\n    ...props \r\n}) =>\r\n    <Button \r\n        className={`LoaderButton ${className}`}\r\n        disabled={disabled || isLoading}\r\n        {...props}\r\n    >\r\n        {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n        {!isLoading ? text : loadingText}\r\n    </Button>;","import React, { Component } from \"react\";\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport \"./Login.css\";\r\n \r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n\r\n    validateForm() {\r\n        return this.state.email.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            await Auth.signIn(this.state.email, this.state.password);\r\n            this.props.userHasAuthenticated(true);\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormGroup controlId=\"email\" bsSize=\"large\">\r\n                        <ControlLabel>Email</ControlLabel>\r\n                        <FormControl\r\n                            autoFocus\r\n                            type=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"password\" bsSize=\"large\">\r\n                        <ControlLabel>Password</ControlLabel>\r\n                        <FormControl\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            type=\"password\"\r\n                        />\r\n                    </FormGroup>\r\n                    <LoaderButton\r\n                        block\r\n                        bsSize=\"large\"\r\n                        disabled={!this.validateForm()}\r\n                        type=\"submit\"\r\n                        isLoading={this.state.isLoading}\r\n                        text=\"Login\"\r\n                        loadingText=\"Logging in...\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) =>\r\n    <Route {...rest} render={props => <C {...props} {...cProps} />} />; ","import React, { Component } from \"react\";\r\nimport {\r\n    HelpBlock,\r\n    FormGroup,\r\n    FormControl,\r\n    ControlLabel\r\n} from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport \"./Signup.css\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nexport default class Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            confirmationCode: \"\",\r\n            newUser: null\r\n        };\r\n    }\r\n\r\n    validateForm() {\r\n        return (\r\n            this.state.email.length > 0 &&\r\n            this.state.password.length > 0 &&\r\n            this.state.password ===  this.state.confirmPassword\r\n        );\r\n    }\r\n\r\n    validateConfirmationForm() {\r\n        return this.state.confirmationCode.length > 0;\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            const newUser = await Auth.signUp({\r\n                username: this.state.email,\r\n                password: this.state.password\r\n            });\r\n            this.setState({\r\n                newUser\r\n            });\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n\r\n        this.setState({ isLoading: false });\r\n    }\r\n\r\n    handleConfirmationSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            await Auth.confirmSignUp(this.state.email, this.state.confirmationCode);\r\n            await Auth.signIn(this.state.email, this.state.password);\r\n\r\n            this.props.userHasAuthenticated(true);\r\n            this.props.history.push(\"/\");\r\n        } catch (e) {\r\n            alert(e.message);\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    renderConfirmationForm() {\r\n        return (\r\n            <form onSubmit={this.handleConfirmationSubmit}>\r\n                <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\r\n                    <ControlLabel>Confimation Code</ControlLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"tel\"\r\n                        value={this.state.confirmationCode}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <HelpBlock>Please check your email for the code.</HelpBlock>\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block \r\n                    bsSize=\"large\"\r\n                    disabled={!this.validateConfirmationForm()}\r\n                    type=\"submit\"\r\n                    isLoading={this.state.isLoading}\r\n                    text=\"Verify\"\r\n                    loadingText=\"Verifying...\"\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n\r\n    renderForm() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <FormGroup controlId=\"email\" bsSize=\"large\">\r\n                    <ControlLabel>Email</ControlLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\" bsSize=\"large\">\r\n                    <ControlLabel>Password</ControlLabel>\r\n                    <FormControl\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        type=\"password\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\r\n                    <ControlLabel>Confirm Password</ControlLabel>\r\n                    <FormControl\r\n                        value={this.state.confirmPassword}\r\n                        onChange={this.handleChange}\r\n                        type=\"password\"\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    bsSize=\"large\"\r\n                    disabled={!this.validateForm()}\r\n                    type=\"submit\"\r\n                    isLoading={this.state.isLoading}\r\n                    text=\"Signup\"\r\n                    loadingText=\"Signing up...\"\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Signup\">\r\n                {this.state.newUser === null\r\n                    ? this.renderForm()\r\n                    : this.renderConfirmationForm()}\r\n            </div>\r\n        );\r\n    }\r\n}","export default {\r\n    MAX_ATTACHMENT_SIZE: 5000000,\r\n    s3: {\r\n      REGION: \"sinaz-notes-apps-uploads\",\r\n      BUCKET: \"us-east-1\"\r\n    },\r\n    apiGateway: {\r\n      REGION: \"us-east-1\",\r\n      URL: \"https://1e9lijdiu6.execute-api.us-east-1.amazonaws.com/prod\"\r\n    },\r\n    cognito: {\r\n      REGION: \"us-east-1\",\r\n      USER_POOL_ID: \"us-east-1_kh7PCsw6g\",\r\n      APP_CLIENT_ID: \"5tupi4v0e1p9anvoen0cfq3b3j\",\r\n      IDENTITY_POOL_ID: \"us-east-1:5e54d900-d7f6-4013-90c4-8d8a4dc7f107\"\r\n    }\r\n  };","import { Storage } from \"aws-amplify\";\r\n\r\nexport async function s3Upload(file) {\r\n    const filename = `${Date.now()}-${file.name}`;\r\n\r\n    const stored = await Storage.vault.put(filename, file, {\r\n        contentType: file.type\r\n    });\r\n\r\n    return stored.key;\r\n}","import React, { Component } from \"react\";\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport config from \"../config\";\r\nimport \"./NewNote.css\";\r\nimport { API } from \"aws-amplify\";\r\nimport { s3Upload } from \"../libs/awsLib\";\r\n\r\nexport default class NewNote extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.file = null;\r\n\r\n        this.state = {\r\n            isLoading: null,\r\n            content: \"\"\r\n        };\r\n    }\r\n\r\n    validateForm() {\r\n        return this.state.content.length > 0;\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleFileChange = event => {\r\n        this.file = event.target.files[0];\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (this.file && this.file.size > config.MAX_ATTACHEMENT_SIZE) {\r\n            alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE/1000000} MB.`);\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            const attachment = this.file\r\n            ? await s3Upload(this.file)\r\n            : null; \r\n\r\n            await this.createNote({\r\n                attachment,\r\n                content: this.state.content\r\n            });\r\n            this.props.history.push(\"/\");\r\n        } catch(e) {\r\n            alert (e);\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    createNote(note) {\r\n        return API.post(\"notes\", \"/notes\", {\r\n            body: note\r\n        }); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewNote\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormGroup controlId=\"content\">\r\n                        <FormControl\r\n                            onChange={this.handleChange}\r\n                            value={this.state.content}\r\n                            compontentClass=\"textarea\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"file\">\r\n                        <ControlLabel>Attachment</ControlLabel>\r\n                        <FormControl onChange={this.handleFileChange} type=\"file\" />\r\n                    </FormGroup>\r\n                    <LoaderButton\r\n                        block\r\n                        bsStyle=\"primary\"\r\n                        bsSize=\"large\"\r\n                        disabled={!this.validateForm()}\r\n                        type=\"submit\"\r\n                        isLoading={this.state.isLoading}\r\n                        text=\"Create\"\r\n                        loadingText=\"Creating...\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport config from \"../config\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport \"./Notes.css\";\r\nimport { s3Upload } from \"../libs/awsLib\";\r\n\r\nexport default class Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.file = null;\r\n        \r\n        this.state = {\r\n            isLoading: null,\r\n            isDeleting: null,\r\n            note: null,\r\n            content: \"\",\r\n            attachementURL: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let attachementURL;\r\n            const note = await this.getNote();\r\n            const { content, attachment } = note;\r\n\r\n            if (attachment) {\r\n                attachementURL = await Storage.vault.get(attachment);\r\n            }\r\n\r\n            this.setState({\r\n                note,\r\n                content,\r\n                attachementURL\r\n            });\r\n        } catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n\r\n    getNote() {\r\n        return API.get(\"notes\", `/notes/${this.props.match.params.id}`);\r\n    }\r\n\r\n    validateForm() {\r\n        return this.state.content.length > 0;\r\n    }\r\n\r\n    formatFilename(str) {\r\n        return str.replace(/^\\w+-/, \"\");\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleFileChange = event => {\r\n        this.file = event.target.files[0];\r\n    }\r\n\r\n    saveNote(note) {\r\n        return API.put(\"notes\", `/notes/${this.props.match.params.id}`, {\r\n            body: note\r\n        });\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        let attachment;\r\n\r\n        event.preventDefault();\r\n\r\n        if (this.file && this.file.size > config.MAX_ATTACHMENT_SIZE) {\r\n            alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE/100000}`);\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            if (this.file) {\r\n                attachment = await s3Upload(this.file);\r\n            }\r\n\r\n            await this.saveNote({\r\n                content: this.state.content,\r\n                attachment: attachment || this.state.note.attachment\r\n            });\r\n            this.props.history.push(\"/\");\r\n        } catch (e) {\r\n            alert(e);\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    deleteNote() {\r\n        return API.del(\"notes\", `/notes/${this.props.match.params.id}`);\r\n    }\r\n\r\n    handleDelete = async event => {\r\n        event.preventDefault();\r\n\r\n        const confirmed = window.confirm(\r\n            \"Are you sure you want to delete this note?\"\r\n        );\r\n\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n\r\n        this.setState ({ isDeleting: true });\r\n\r\n        try {\r\n            await this.deleteNote();\r\n            this.props.history.push(\"/\");\r\n        } catch (e) {\r\n            alert(e);\r\n            this.setState({isDeleting: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Notes\">\r\n                {this.state.note &&\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <FormGroup controlId=\"content\">\r\n                            <FormControl\r\n                                onChange={this.handleChange}\r\n                                value={this.state.content}\r\n                                componentClass=\"textarea\"\r\n                            />\r\n                        </FormGroup>\r\n                        {this.state.note.attachment &&\r\n                            <FormGroup>\r\n                                <ControlLabel>Attachment</ControlLabel>\r\n                                <FormControl.Static>\r\n                                    <a \r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        href={this.state.attachementURL}\r\n                                        >\r\n                                            {this.formatFilename(this.state.note.attachment)}\r\n                                        </a>\r\n                                </FormControl.Static>\r\n                            </FormGroup>}\r\n                        <FormGroup controlId=\"file\">\r\n                            {!this.state.note.attachment &&\r\n                                <ControlLabel>Attachment</ControlLabel>}\r\n                            <FormControl onChange={this.handleFileChange} type=\"file\" />\r\n                        </FormGroup>\r\n                        <LoaderButton\r\n                            block\r\n                            bsStyle=\"primary\"\r\n                            bsSize=\"large\"\r\n                            disabled={!this.validateForm()}\r\n                            type=\"submit\"\r\n                            isLoading={this.state.isLoading}\r\n                            text=\"Save\"\r\n                            loadingText=\"Saving...\"\r\n                        />\r\n                        <LoaderButton\r\n                            block\r\n                            bsStyle=\"danger\"\r\n                            bsSize=\"large\"\r\n                            isLoading={this.state.isDeleting}\r\n                            onClick={this.handleDelete}\r\n                            text=\"Delete\"\r\n                            loadingText=\"Deleting...\"\r\n                        />\r\n                    </form>}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) =>\r\n    <Route\r\n        {...rest}\r\n        render={props => \r\n            cProps.isAuthenticated\r\n                ? <C {...props} {...cProps} />\r\n                : <Redirect\r\n                    to={`/login?redirect=${props.location.pathname}${props.location.search}`}\r\n                    />}\r\n    />;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction querystring(name, url = window.location.href) {\r\n    name = name.replace(/[[]]/g, \"\\\\$&\");\r\n\r\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\r\n    const results = regex.exec(url);\r\n\r\n    if (!results) {\r\n        return null;\r\n    }\r\n    if (!results[2]) {\r\n        return \"\";\r\n    }\r\n\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}\r\n\r\nexport default ({ component: C, props: cProps, ...rest }) => {\r\n    const redirect = querystring(\"redirect\");\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                !cProps.isAuthenticated\r\n                    ? <C {...props} {...cProps} />\r\n                    : <Redirect\r\n                        to={redirect === \"\" || redirect === null ? \"/\" : redirect}\r\n                        />}\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport Login from \"./containers/Login\";\r\nimport AppliedRoute from \"./components/AppliedRoute\";\r\nimport Signup from \"./containers/Signup\";\r\nimport NewNote from \"./containers/NewNote\";\r\nimport Notes from \"./containers/Notes\";\r\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\r\nimport UnathenticatedRoute from \"./components/UnauthenticatedRoute\";\r\n\r\n\r\nexport default ({ childProps }) =>\r\n  <Switch>\r\n    <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\r\n    <UnathenticatedRoute path=\"/login\" exact component={Login} props={childProps} />\r\n    <UnathenticatedRoute path=\"/signup\" exact component={Signup} props={childProps} />\r\n    <AuthenticatedRoute path=\"/notes/new\" exact component={NewNote} props={childProps} />\r\n    <AuthenticatedRoute path=\"/notes/:id\" exact component={Notes} props={childProps} />\r\n    { /* Finally, catch all unmatched routes */ }\r\n    <Route component={NotFound} />\r\n  </Switch>;","import React, { Component, Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"./App.css\";\nimport { Auth } from \"aws-amplify\";\nimport Routes from \"./Routes\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAuthenticated: false,\n      isAuthenticating: true\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      await Auth.currentSession();\n      this.userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n    this.setState({ isAuthenticating: false });\n  }\n\n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  handleLogout = async event => {\n    await Auth.signOut();\n    this.userHasAuthenticated(false);\n    this.props.history.push(\"/login\");\n  }\n\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated\n    };\n  \n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\">Scratch</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              {this.state.isAuthenticated\n                ? <NavItem onClick={this.handleLogout}>Logout</NavItem>\n                : <Fragment>\n                    <LinkContainer to=\"/signup\">\n                      <NavItem>Signup</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/login\">\n                      <NavItem>Login</NavItem>\n                    </LinkContainer>\n                  </Fragment>\n              }\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Routes childProps={childProps} />\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\"; \nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      identityPoolId: config.cognito.IDENTITY_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      region: config.s3.REGION,\n      bucket: config.s3.BUCKET,\n      identityPoolId: config.cognito.IDENTITY_POOL_ID\n    },\n    API: {\n      endpoints: [\n        {\n          name: \"notes\",\n          endpoint: config.apiGateway.URL,\n          region: config.apiGateway.REGION\n        },\n      ]\n    }\n  });\n \nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}